{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCkBA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAhB4B,SAAS,gBAAgB,CAAC,sB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAgBtC,OAAO,CAAC,SAAC,CAAzB,EACE,IAfsB,EAGhB,EAYA,EAAe,SAAS,aAAa,CAAC,SAExC,EAZJ,AAAI,AAAU,MAFR,EAAQ,AAFQ,CADA,EAiBgB,EAAQ,IAAI,EAhBrB,KAAK,CAAC,IAEP,SAAS,CAAC,SAAC,CAAvC,EAA6C,OAAA,IAAM,EAAE,WAAW,E,IAGxC,EAAO,KAAK,CAAC,EAAG,GAAS,IAAM,EAAO,KAAK,CAAC,GAK7D,EAQP,EACE,CAAgB,CAAC,EAAE,CAAC,WAAW,GAAK,EAAiB,KAAK,CAAC,GAE7D,EAAa,YAAY,CAAC,QAAS,eACnC,EAAa,YAAY,CAAC,MAAQ,GAAa,MAAA,CAAX,EAAQ,EAAE,GAC9C,EAAa,WAAW,CAAG,EAE3B,EAAQ,YAAY,CAAC,cAAe,GAAoB,MAAA,CAAjB,IAEvC,EAAQ,qBAAqB,CAAC,cAAe,EAC/C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar allInputElement = _to_consumable_array(document.querySelectorAll(\"input.field-text\"));\nfunction getCorrectName(string) {\n    var splitedString = string.split(\"\");\n    var index = splitedString.findIndex(function(e) {\n        return e === e.toUpperCase();\n    });\n    if (index !== -1) {\n        var correctString = string.slice(0, index) + \" \" + string.slice(index);\n        return correctString;\n    }\n    return string;\n}\nallInputElement.forEach(function(element) {\n    var labelElement = document.createElement(\"label\");\n    var inputElementName = getCorrectName(element.name);\n    inputElementName = inputElementName[0].toUpperCase() + inputElementName.slice(1);\n    labelElement.setAttribute(\"class\", \"field-label\");\n    labelElement.setAttribute(\"for\", \"\".concat(element.id));\n    labelElement.textContent = inputElementName;\n    element.setAttribute(\"placeholder\", \"\".concat(inputElementName));\n    element.insertAdjacentElement(\"beforebegin\", labelElement);\n});\n\n//# sourceMappingURL=index.ea8f60d9.js.map\n","'use strict';\n\nconst allInputElement = [...document.querySelectorAll('input.field-text')];\n\nfunction getCorrectName(string) {\n  const splitedString = string.split('');\n\n  const index = splitedString.findIndex((e) => e === e.toUpperCase());\n\n  if (index !== -1) {\n    const correctString = string.slice(0, index) + ' ' + string.slice(index);\n\n    return correctString;\n  }\n\n  return string;\n}\n\nallInputElement.forEach((element) => {\n  const labelElement = document.createElement('label');\n\n  let inputElementName = getCorrectName(element.name);\n\n  inputElementName =\n    inputElementName[0].toUpperCase() + inputElementName.slice(1);\n\n  labelElement.setAttribute('class', 'field-label');\n  labelElement.setAttribute('for', `${element.id}`);\n  labelElement.textContent = inputElementName;\n\n  element.setAttribute('placeholder', `${inputElementName}`);\n\n  element.insertAdjacentElement('beforebegin', labelElement);\n});\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","allInputElement","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","element","string","index","labelElement","createElement","inputElementName","splitedString","split","findIndex","e","toUpperCase","setAttribute","concat","id","textContent","insertAdjacentElement"],"version":3,"file":"index.ea8f60d9.js.map"}